"use strict";(self.webpackChunksuper=self.webpackChunksuper||[]).push([[164],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),c=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),g=c(n),d=o,m=g["".concat(u,".").concat(d)]||g[d]||l[d]||i;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=g;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},4315:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const i={position:1},a="Contribution Guide",s={unversionedId:"super-extension/contribution-guide",id:"super-extension/contribution-guide",title:"Contribution Guide",description:"Project structure",source:"@site/docs/super-extension/contribution-guide.md",sourceDirName:"super-extension",slug:"/super-extension/contribution-guide",permalink:"/docs/super-extension/contribution-guide",draft:!1,editUrl:"https://github.com/digitamizers/super-docs/docs/super-extension/contribution-guide.md",tags:[],version:"current",frontMatter:{position:1},sidebar:"tutorialSidebar",previous:{title:"Build Guide",permalink:"/docs/super-extension/build-guide"}},u={},c=[{value:"Project structure",id:"project-structure",level:2},{value:"Git Workflow",id:"git-workflow",level:2}],p={toc:c};function l(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"contribution-guide"},"Contribution Guide"),(0,o.kt)("h2",{id:"project-structure"},"Project structure"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"root\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 src\n\u2502\xa0\xa0 \u251c\u2500\u2500 extension                               # Browser Extension src\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 background.ts                       # Extension background entrypoint\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 configure                           # Extension configuration/options page\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 content_scripts                     # Extension foreground. Scripts injected in pages(including their iframes) of all tabs\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 captureElement.ts               # Element xPath capturer\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 captureTable.ts                 # Table element xPath capturer\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 superappWidget                  # Side widget\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 manifest.json                       # Extension manifest\n\u2502\xa0\xa0 \u2502\xa0\xa0 \u251c\u2500\u2500 service_worker                      # Part of extension background\n\u2502\xa0\xa0 \u2514\u2500\u2500 messaging_host                          # Native Messaging Host src\n\u251c\u2500\u2500 webpack.config.js\n\u2514\u2500\u2500 yarn.lock\n")),(0,o.kt)("h2",{id:"git-workflow"},"Git Workflow"),(0,o.kt)("p",null,"When making changes, create a new branch from ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"development"))," branch."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout -b new-feature-1\n")),(0,o.kt)("p",null,"Make your changes"),(0,o.kt)("p",null,"Whenever syncing remote changes, do it with rebase"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git pull --rebase origin development\n")),(0,o.kt)("p",null,"Once changes done, push your changes to remote repository under same branch name"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git push origin new-feature-1\n")),(0,o.kt)("p",null,"Create a PR from your branch to ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"development"))," branch. "),(0,o.kt)("p",null,"Make and push if any required changes before approval to your branch. Closing and opening a new PR is not required."),(0,o.kt)("admonition",{title:"To merger",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"When merging PR, merge it with default merge strategy i.e. merging with merge commit.")))}l.isMDXComponent=!0}}]);